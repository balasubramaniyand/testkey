root@opexwise-ui-demo:/var/opt/airflow# docker-compose up -d
WARN[0000] /var/opt/airflow/docker-compose.yaml: `version` is obsolete
[+] Running 8/9
 ✔ Network airflow_opexwise               Created                                                                             0.1s
 ⠦ Container airflow-redis-1              Starting                                                                            0.7s
 ✔ Container airflow-postgresopex-1       Started                                                                             0.6s
 ✔ Container airflow-postgres-1           Started                                                                             0.7s
 ✔ Container airflow-flower-1             Created                                                                             0.1s
 ✔ Container airflow-airflow-scheduler-1  Created                                                                             0.1s
 ✔ Container airflow-airflow-worker-1     Created                                                                             0.1s
 ✔ Container airflow-airflow-init-1       Created                                                                             0.1s
 ✔ Container airflow-airflow-webserver-1  Created                                                                             0.1s
Error response from daemon: failed to create task for container: failed to create shim task: OCI runtime create failed: runc create failed: sysctl "vm.overcommit_memory" is not in a separate kernel namespace: unknown
root@opexwise-ui-demo:/var/opt/airflow# cat docker-compose.yaml
version: '3'
x-airflow-common:
  &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-iopexlabs/airflow:1.2}
  #image: ${AIRFLOW_IMAGE_NAME:-iopexlabs/airflow:2.106.3}
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    #AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CELERY__BROKER_URL: redis://redis:redis@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__ENABLE_XCOM_PICKLING: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
    FLOWER_BASIC_AUTH: 'jeyakumar:Iopex@123'
  volumes:
    - ./dags/dags_json:/opt/airflow/dags/dags_json
    #- ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    #- ./plugins:/opt/airflow/plugins
    - ./manual_uploaded_files:/opt/airflow/manual_uploaded_files
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:

  postgresopex:
    image: postgres:13
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
      POSTGRES_PORT: 5432
    volumes:
      - ./postgresopex:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  postgres:
    image: postgres:13
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ./postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    sysctls:
      - net.core.somaxconn=511
      - vm.overcommit_memory=1
    environment:
      - REDIS_HOST_PASSWORD=redis
    command: /bin/sh -c "redis-server --requirepass $$REDIS_HOST_PASSWORD"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8006:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-init:
    <<: *airflow-common
    command: version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}

  flower:
    <<: *airflow-common
    command: celery flower
    ports:
      - 5555:5555
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

volumes:
  postgres-db-volume:
  postgres-opexdb-volume:
networks:
  default:
    name: airflow_opexwise

root@opexwise-ui-demo:/var/opt/airflow#
